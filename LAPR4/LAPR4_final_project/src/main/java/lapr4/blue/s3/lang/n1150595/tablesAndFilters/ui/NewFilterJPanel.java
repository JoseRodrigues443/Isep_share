/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr4.blue.s3.lang.n1150595.tablesAndFilters.ui;

import csheets.core.IllegalValueTypeException;
import csheets.core.formula.Formula;
import csheets.core.formula.Function;
import csheets.core.formula.compiler.FormulaCompilationException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lapr4.blue.s3.lang.n1150595.tablesAndFilters.controller.TablesAndFiltersController;

/**
 *
 * @author Bruna Moreira Teixeira <1150595@isep.ipp.pt>
 */
public class NewFilterJPanel extends javax.swing.JPanel {

    private TablesAndFiltersController controller;
    private TablesAndFiltersSideBar sideBar;

    /**
     * Creates new form TableJPanel
     */
    public NewFilterJPanel(TablesAndFiltersController controller, TablesAndFiltersSideBar sideBar) {
        this.controller = controller;
        initComponents();

        this.sideBar = sideBar;

        jComboBoxFunctions.insertItemAt("", 0);
        jComboBoxFunctions.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelFunction = new javax.swing.JLabel();
        jComboBoxFunctions = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabelSyntaxx = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaFilter = new javax.swing.JTextArea();
        jButtonCreate = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        jLabelFunction.setText("Function: ");

        jComboBoxFunctions.setModel(new javax.swing.DefaultComboBoxModel<>(functions()));
        jComboBoxFunctions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFunctionsActionPerformed(evt);
            }
        });

        jLabel1.setText("Syntax: ");

        jLabelSyntaxx.setText(" ");

        jLabel2.setText("Filter:");

        jTextAreaFilter.setColumns(20);
        jTextAreaFilter.setRows(5);
        jScrollPane1.setViewportView(jTextAreaFilter);

        jButtonCreate.setText("Apply");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelFunction)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxFunctions, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelSyntaxx, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonCreate)
                    .addComponent(jButtonCancel))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFunction)
                    .addComponent(jComboBoxFunctions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSyntaxx)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCreate)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancel))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxFunctionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFunctionsActionPerformed
        int i = jComboBoxFunctions.getSelectedIndex();
        if (i == 0) {
            this.jLabelSyntaxx.setText("");
            this.jLabelSyntaxx.setToolTipText("");
        }
        if (i > 0) {
            this.controller.selectFunction(i - 1);
            this.jLabelSyntaxx.setText(this.controller.syntax());
            this.jLabelSyntaxx.setToolTipText(this.controller.syntax());
        }
    }//GEN-LAST:event_jComboBoxFunctionsActionPerformed

    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
        try {
            this.controller.setActualTable(this.controller.tableByName(this.sideBar.getSelectedName()));
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Please select a table!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
        if (!jTextAreaFilter.getText().isEmpty()) {
            try {
                this.controller.setEdit(true);
                this.controller.actualTable().resetContent();
                this.controller.setEdit(false);
                Formula f = null;
                String pre = "";
                String pos = "";
                if (jComboBoxFunctions.getSelectedIndex() > 0) {
                    f = this.controller.applyFilter(jTextAreaFilter.getText(), true);
                    pre = controller.baseFunction() + "(";
                    pos = ")";
                } else if (jComboBoxFunctions.getSelectedIndex() < 1) {
                    f = this.controller.applyFilter(jTextAreaFilter.getText(), false);
                }
                if (f == null) {
                    JOptionPane.showMessageDialog(null, "Filter could not be applied! Try again.");
                    jComboBoxFunctions.setSelectedIndex(-1);
                    jLabelSyntaxx.setText("");
                    jTextAreaFilter.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "Filter successfully applied.");
                    this.controller.actualTable().addFilter(pre + jTextAreaFilter.getText() + pos);
                    this.controller.actualTable().setActualFilter(pre + jTextAreaFilter.getText() + pos);
                }
            } catch (IllegalValueTypeException | FormulaCompilationException ex) {
                Logger.getLogger(NewFilterJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "You didn't provide all information needed!", "Warning!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCreateActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        jTextAreaFilter.setText("");
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private String[] functions() {
        List<String> aux = new ArrayList<>();
        for (Function function : this.controller.functions()) {
            aux.add(function.getIdentifier());
        }
        String[] array = new String[aux.size()];
        for (int i = 0; i < aux.size(); i++) {
            array[i] = aux.get(i);
        }
        return array;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JComboBox<String> jComboBoxFunctions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelFunction;
    private javax.swing.JLabel jLabelSyntaxx;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaFilter;
    // End of variables declaration//GEN-END:variables
}
