/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr4.red.s3.core.n1140412.sendEmailSMS.UI;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import lapr4.red.s3.core.n1140412.sendEmailSMS.Controller.EmailSMSController;

/**
 *
 * @author Tiago
 */
public class SelectFromListUI extends javax.swing.JFrame {

    private EmailSMSController controller;
    /**
     * 0 for email 1 for sms
     */
    private int mode;
    /**
     * 1 for all contacts 2 for profession search 3 for tag search
     */
    private int typeOfSearch;

    /**
     * Creates new form SelectFromListUI
     *
     * @param controller
     * @param mode
     * @param typeOfSearch
     */
    public SelectFromListUI(EmailSMSController controller, int mode, int typeOfSearch) {
        this.controller = controller;
        this.mode = mode;
        this.typeOfSearch = typeOfSearch;
        
        
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        contactsList = new javax.swing.JList<>();
        confirmJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select from list");

        switch (this.typeOfSearch) {
            case 1:
            if(mode==0){
                contactsList.setModel(this.controller.listForUI(this.controller.listAllEmails()));
                break;
            }else{
                contactsList.setModel(this.controller.listForUI(this.controller.listallPhones()));
                break;
            }
            case 2:
            contactsList.setModel(this.controller.listForUI(this.controller.listProfessions()));
            break;
            case 3:
            contactsList.setModel(this.controller.listForUI(this.controller.listTags()));
            break;
        }
        jScrollPane1.setViewportView(contactsList);

        confirmJButton.setText("Confirm");
        confirmJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmJButtonActionPerformed(evt);
            }
        });

        cancelJButton.setText("Cancel");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(confirmJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelJButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmJButton)
                    .addComponent(cancelJButton))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelJButtonActionPerformed

    private void confirmJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmJButtonActionPerformed
        try {
            if (mode == 0) {
                switch (typeOfSearch) {
                    case 1:
                        List<String> list = contactsList.getSelectedValuesList();
                        for (String s : list) {
                            s = s.split(" ")[0];
                        }
                        
                        controller.setRecipientsList(list);
                        break;
                    case 2:
                        controller.setRecipientsList(controller.listEmailsByProfession(contactsList.getSelectedValuesList()));
                        break;
                    case 3:
                        controller.setRecipientsList(controller.listEmailsByTags(contactsList.getSelectedValuesList()));
                        break;
                }
            } else {
                switch (typeOfSearch) {
                    case 1:
                        List<String> list = contactsList.getSelectedValuesList();
                        for (String s : list) {
                            s = s.split(" ")[0];
                        }
                        
                        controller.setRecipientsList(list);
                        break;
                    case 2:
                        controller.setRecipientsList(controller.listPhonesByProfession(contactsList.getSelectedValuesList()));
                        break;
                    case 3:
                        controller.setRecipientsList(controller.listPhonesByTag(contactsList.getSelectedValuesList()));
                        break;
                }
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Selecione pelos menos um elemento!");
        }
        dispose();
    }//GEN-LAST:event_confirmJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelJButton;
    private javax.swing.JButton confirmJButton;
    private javax.swing.JList<String> contactsList;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
