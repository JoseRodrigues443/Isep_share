@startuml

actor User

User --> CellEditor: Inputs block of instructions
activate CellEditor
CellEditor -> Address: address = getAddress()
CellEditor -> Controller: cell = getCell(address)
CellEditor -> Cell: setContent(content)
deactivate CellEditor

activate Cell
Cell -> CellImpl: setContent(content)

activate CellImpl
CellImpl -> CellImpl: storeContent(content)

activate FormulaCompiler
CellImpl -> FormulaCompiler: compile(cell, content)

activate ExcelExpressionCompiler
FormulaCompiler -> ExcelExpressionCompiler: compile(cell, content)

activate ANTLRStringStream
ExcelExpressionCompiler -> ANTLRStringStream: input = create(source)
deactivate ANTLRStringStream

activate FormulaLexer
ExcelExpressionCompiler -> FormulaLexer: lexer = create(input)
deactivate FormulaLexer

activate CommonTokenStream
ExcelExpressionCompiler -> CommonTokenStream: tokens = create(lexer)
deactivate CommonTokenStream

activate FormulaParser
ExcelExpressionCompiler -> FormulaParser: parser = create(tokens)
ExcelExpressionCompiler -> FormulaParser: tree = parser.expression()
deactivate FormulaParser

activate Expression
ExcelExpressionCompiler -> Expression: create()
deactivate Expression

ExcelExpressionCompiler -> ExcelExpressionCompiler: expression = convert(cell, tree)
ExcelExpressionCompiler -> FormulaCompiler: expression
deactivate ExcelExpressionCompiler

activate Formula
FormulaCompiler -> Formula: formula = create(cell, expression)
deactivate Formula

FormulaCompiler -> CellImpl: formula
deactivate FormulaCompiler

CellImpl -> Cell: show()
deactivate CellImpl
Cell --> User: Result
deactivate Cell

@enduml
