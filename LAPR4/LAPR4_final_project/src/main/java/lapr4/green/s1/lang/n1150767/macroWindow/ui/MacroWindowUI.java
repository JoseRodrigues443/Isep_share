/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr4.green.s1.lang.n1150767.macroWindow.ui;

import csheets.core.Address;
import csheets.core.Cell;
import csheets.core.CellImpl;
import csheets.core.Spreadsheet;
import csheets.core.Value;
import csheets.core.Workbook;
import csheets.core.formula.Function;
import csheets.core.formula.Operator;
import csheets.core.formula.compiler.FormulaCompilationException;
import csheets.core.formula.lang.Macro;
import csheets.ui.ctrl.UIController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import lapr4.blue.s3.lang.n1150662.macroWindowParameters.Parameter;
import lapr4.blue.s3.lang.n1150662.macroWindowParametersController.MacroWindowParametersController;
import lapr4.green.s1.lang.n1150767.macroWindow.MacroWindowController;
import lapr4.red.s2.lang.n1140412.multipleMacroController.MultipleMacroController;
import lapr4.red.s2.lang.n1141114.globalVariables.domain.GlobalVariable;
import lapr4.red.s2.lang.n1141114.temporaryVariables.domain.TemporaryVariable;
import lapr4.red.s2.lang.n1141114.temporaryVariables.domain.TemporaryVariableList;
import lapr4.red.s2.lang.n1150710.BeanShell.BeanShellController;
import lapr4.red.s2.lang.n1150710.BeanShell.BeanShellInterpretationExtension;
import lapr4.red.s2.lang.n1150710.BeanShell.Integration.BeanShellScript;
import lapr4.red.s2.lang.n1150710.BeanShell.Integration.BeanShellScriptList;
import lapr4.red.s2.lang.n1150710.BeanShell.Integration.ScriptsController;

/**
 *
 * @author Catarina Sousa
 * @autor 1150710@isep.ipp.pt (add shellBean Lang 7.1) && (shellBean integration
 * Lang 7.2)
 * @autor 1140412@isep.ipp.pt (multiple macros)
 * @edited by 1150630
 * @edited by 1150662 (parameters)
 */
public class MacroWindowUI extends javax.swing.JFrame {

    private Cell cell;
    private MacroWindowController ctrl = null;
    private BeanShellController beanShellController = null;
    //private final MultipleMacroController multipleMacroController;
    private final MacroWindowParametersController parametersController;
    private ScriptsController scriptsController;
    private final UIController controller;
    private ArrayList<String> listP;
    private TemporaryVariableList list;
    private ArrayList<Parameter> parameters;

    /**
     * Creates new form MacroWindowUI
     *
     * @param activeSpreadSheet
     * @param controller
     */
    public MacroWindowUI(Spreadsheet activeSpreadSheet, UIController controller) {
        this.controller = controller;
        this.beanShellController = new BeanShellController();
        this.scriptsController = new ScriptsController();
        this.parametersController = new MacroWindowParametersController(controller, cell);
        //this.multipleMacroController = new MultipleMacroController(controller,cell);7
        this.parameters = new ArrayList<>();
        this.listP = new ArrayList<>();
        list = new TemporaryVariableList();
        initComponents();
        if (activeSpreadSheet != null) {
            this.setTitle("Single Macro");
            this.cell = CellImpl.cellImpl(activeSpreadSheet, new Address(0, 0));
            this.ctrl = new MacroWindowController(cell);
            this.setLocationRelativeTo(null);
            this.setVisible(true);
            comboFunctions.setBackground(northPanel.getForeground());
            comboFunctions.setForeground(northPanel.getBackground());
            comboOperators.setBackground(northPanel.getForeground());
            comboOperators.setForeground(northPanel.getBackground());
            btnCancel.setBackground(southPanel.getBackground());
            btnExecute.setBackground(southPanel.getBackground());
            updateCombos();
            console.requestFocus();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Invalid SpreadSheet", "Error", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    private void updateCombos() {
        comboFunctions.removeAllItems();
        comboOperators.removeAllItems();
        List<Function> functions = ctrl.functions();
        List<Operator> operators = ctrl.operators();
        for (Function function : functions) {
            comboFunctions.addItem(function.getIdentifier());
        }
        for (Operator operator : operators) {
            comboOperators.addItem(operator.getIdentifier());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane6 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton4 = new javax.swing.JButton();
        northPanel = new javax.swing.JPanel();
        southPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaBeanShellEditor = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListScripts = new javax.swing.JList<>();
        jButtonSave = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextBeanShellAreaDescription = new javax.swing.JTextArea();
        jButtonResetList = new javax.swing.JButton();
        jPanelBeanShell = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaHelp = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        savedMacroList = new javax.swing.JList<>();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        editScriptArea = new javax.swing.JTextArea();
        scriptSaveButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox<>();
        jPanelMacro = new javax.swing.JPanel();
        lblfuntion = new javax.swing.JLabel();
        comboFunctions = new javax.swing.JComboBox<>();
        comboOperators = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnExecute = new javax.swing.JButton();
        jButtonGenerateShellBeansScript = new javax.swing.JButton();
        jButtonRunShellBean = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        parameter = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        parameterList = new javax.swing.JList<>();
        addbtn = new javax.swing.JButton();
        value = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(jList1);

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        javax.swing.GroupLayout southPanelLayout = new javax.swing.GroupLayout(southPanel);
        southPanel.setLayout(southPanelLayout);
        southPanelLayout.setHorizontalGroup(
            southPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
        );
        southPanelLayout.setVerticalGroup(
            southPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout northPanelLayout = new javax.swing.GroupLayout(northPanel);
        northPanel.setLayout(northPanelLayout);
        northPanelLayout.setHorizontalGroup(
            northPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(northPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(southPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
        northPanelLayout.setVerticalGroup(
            northPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, northPanelLayout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(southPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTextAreaBeanShellEditor.setColumns(20);
        jTextAreaBeanShellEditor.setRows(5);
        jScrollPane3.setViewportView(jTextAreaBeanShellEditor);

        jListScripts.setModel(scriptsController.listForUI());
        jListScripts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListScriptsMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jListScripts);

        jButtonSave.setText("Save new Script");
        jButtonSave.setActionCommand("Save to list");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonEdit.setText("Edit current");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jTextBeanShellAreaDescription.setColumns(20);
        jTextBeanShellAreaDescription.setRows(5);
        jScrollPane5.setViewportView(jTextBeanShellAreaDescription);

        jButtonResetList.setText("Put default list");
        jButtonResetList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonResetList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .addComponent(jButtonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonResetList, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Saved BeanShell Script", jPanel2);

        jTextAreaHelp.setEditable(false);
        jTextAreaHelp.setColumns(20);
        jTextAreaHelp.setRows(5);
        jTextAreaHelp.setText("Help:\n\nThis user interface enables the user to run to different languages:\n Macros or shell beans.\n\nThe first enables the user to create and run macros. \nThe seconds generates a script that can be executed.\nIn different circumstances (ex: result may vary in different spreadsheets).\n\nThe user does not need to create objects such as Workbook, Spreadsheet, Cell or Macro because they are already implemented with the name of workbook, speadsheet, cell and macro, respectively.\n\nBeanShell example:\n\nmyController.getApp().create();\nMacro m = new Macro(uicontroller.getActiveSpreadsheet());\niimportObject( m );\nreturn m.execute();\n\n\n");
        jScrollPane1.setViewportView(jTextAreaHelp);

        javax.swing.GroupLayout jPanelBeanShellLayout = new javax.swing.GroupLayout(jPanelBeanShell);
        jPanelBeanShell.setLayout(jPanelBeanShellLayout);
        jPanelBeanShellLayout.setHorizontalGroup(
            jPanelBeanShellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 909, Short.MAX_VALUE)
        );
        jPanelBeanShellLayout.setVerticalGroup(
            jPanelBeanShellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBeanShellLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Help", jPanelBeanShell);

        savedMacroList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        savedMacroList.setModel(parametersController.listForUI());
        jScrollPane7.setViewportView(savedMacroList);

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editScriptArea.setColumns(20);
        editScriptArea.setRows(5);
        jScrollPane8.setViewportView(editScriptArea);

        scriptSaveButton.setText("Save");
        scriptSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scriptSaveButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Parameters:");

        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(editButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scriptSaveButton)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                    .addComponent(jScrollPane8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scriptSaveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editButton)
                        .addComponent(deleteButton)
                        .addComponent(jLabel3)
                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Saved Macros", jPanel1);

        lblfuntion.setText("Functions :");

        comboFunctions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboFunctions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFunctionsActionPerformed(evt);
            }
        });

        comboOperators.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Operators :");

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnExecute.setText("Execute");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        jButtonGenerateShellBeansScript.setText("Genrerate Script");
        jButtonGenerateShellBeansScript.setToolTipText("Generates an ShellBean Script for the user to run or edit.");
        jButtonGenerateShellBeansScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateShellBeansScriptActionPerformed(evt);
            }
        });

        jButtonRunShellBean.setText("Run Script");
        jButtonRunShellBean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunShellBeanActionPerformed(evt);
            }
        });

        console.setBackground(new java.awt.Color(51, 51, 51));
        console.setColumns(20);
        console.setForeground(new java.awt.Color(255, 255, 255));
        console.setRows(5);
        console.setCaretColor(new java.awt.Color(255, 255, 255));
        console.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(console);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        parameter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parameterActionPerformed(evt);
            }
        });

        jLabel2.setText("Parameter:");

        jScrollPane9.setViewportView(parameterList);

        addbtn.setText("Add parameter");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Value:");

        javax.swing.GroupLayout jPanelMacroLayout = new javax.swing.GroupLayout(jPanelMacro);
        jPanelMacro.setLayout(jPanelMacroLayout);
        jPanelMacroLayout.setHorizontalGroup(
            jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMacroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelMacroLayout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)
                        .addGap(191, 191, 191)
                        .addComponent(jButtonGenerateShellBeansScript)
                        .addGap(48, 48, 48)
                        .addComponent(jButtonRunShellBean, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelMacroLayout.createSequentialGroup()
                        .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMacroLayout.createSequentialGroup()
                                .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboFunctions, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblfuntion))
                                .addGap(77, 77, 77)
                                .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboOperators, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(26, 26, 26)
                                .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(parameter))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMacroLayout.createSequentialGroup()
                                .addComponent(addbtn)
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanelMacroLayout.setVerticalGroup(
            jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMacroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMacroLayout.createSequentialGroup()
                        .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMacroLayout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblfuntion)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)))
                            .addComponent(addbtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboFunctions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboOperators, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMacroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGenerateShellBeansScript)
                    .addComponent(btnExecute)
                    .addComponent(btnCancel)
                    .addComponent(jButtonRunShellBean)
                    .addComponent(saveButton))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Macros & BeanShell", jPanelMacro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 241, Short.MAX_VALUE)
                .addComponent(northPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(northPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        List<String> lines = new ArrayList<>();
        String[] textLines = console.getText().split("\\n");

        for (int i = 0; i < textLines.length; i++) {
            lines.add(textLines[i]);
        }

        try {
            String infoMessage = parametersController.execute(lines,list);
            //String infoMessage = ctrl.execute(lines);
            if (infoMessage.isEmpty()) {
                infoMessage = "no results";
            }
            JOptionPane.showMessageDialog(rootPane, "<html><span style='font-size:20'>" + infoMessage + "</span></html>", "Result", JOptionPane.INFORMATION_MESSAGE);
        } catch (FormulaCompilationException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.toString(), ex.getClass().getSimpleName(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExecuteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @autor 1150710@isep.ipp.pt
     * @param evt
     */
    private void jButtonGenerateShellBeansScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateShellBeansScriptActionPerformed
        // TODO add your handling code here:        
        String s;

        s = BeanShellInterpretationExtension.exampleScript();
        //s = "System.out.println(\"bananas\");";    // for tests
        console.setText(s);

    }//GEN-LAST:event_jButtonGenerateShellBeansScriptActionPerformed

    /**
     * @autor 1150710@isep.ipp.pt
     * @param evt
     */
    private void jButtonRunShellBeanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunShellBeanActionPerformed
        // TODO add your handling code here:
        String s = console.getText();
        String title;
        Workbook workbook = controller.getActiveWorkbook();
        Spreadsheet spreadsheet = controller.getActiveSpreadsheet();
        Cell c = controller.getActiveCell();
        Macro macro = new Macro();
        
        Value v = new Value(10);
        TemporaryVariable temp = new TemporaryVariable(spreadsheet, c, "temporary", v);
        GlobalVariable global = new GlobalVariable(spreadsheet, c, "global", v);
        Object[] options = {"OK"};
        String outputToUser = "";
        if (this.beanShellController.validate(s)) {
            outputToUser = this.beanShellController.executeScript(s, workbook, spreadsheet, c, macro, temp , global);
            title = "Sucess";
        } else {
            outputToUser = "This is not java code, so you cannot run it, sorry. Please"
                    + " insert the generate script option or"
                    + "write the script using the proper matter. ";
            title = "Error";
        }

        int n = JOptionPane.showOptionDialog(this,
                outputToUser, title,
                JOptionPane.PLAIN_MESSAGE,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);



    }//GEN-LAST:event_jButtonRunShellBeanActionPerformed

    private void comboFunctionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFunctionsActionPerformed

    }//GEN-LAST:event_comboFunctionsActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        String script = this.jTextAreaBeanShellEditor.getText();
        String description = this.jTextBeanShellAreaDescription.getText();
        boolean userInsertedTheNameCorrectly = false;
        String messageToUser = "What is the name of the script? \n(name with letters, numbers no spaces. Ex: scriptFactOf5)";
        String scriptName;
        do {
            scriptName = (String) JOptionPane.showInputDialog(
                    this,
                    messageToUser,
                    "Insert name please",
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    null,
                    null);
            userInsertedTheNameCorrectly = BeanShellScriptList.validateName(scriptName);
        } while (!userInsertedTheNameCorrectly);
        int count = 1;
        String scriptNameTmp = scriptName;
        while (!this.scriptsController.add(new BeanShellScript(scriptNameTmp, description, script))) {
            scriptNameTmp = scriptName + count;
        }
        this.scriptsController.saveList();
        this.jListScripts.setModel(this.scriptsController.listForUI());
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // TODO add your handling code here:
        int indexes[] = this.jListScripts.getSelectedIndices();
        if (indexes.length > 0) {   //something is selected
            String script = this.jTextAreaBeanShellEditor.getText();
            String description = this.jTextBeanShellAreaDescription.getText();
            this.scriptsController.get(indexes[0]).setBeanShellScript(script);
            this.scriptsController.get(indexes[0]).setScriptDescription(description);
            this.scriptsController.saveList();
            this.jListScripts.setModel(this.scriptsController.listForUI());
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int indexes[] = this.jListScripts.getSelectedIndices();
        if (indexes.length > 0) {   //something is selected
            for (int i = 0; i < indexes.length; i++) {
                scriptsController.remove(i);
                scriptsController.saveList();
                this.jListScripts.setModel(this.scriptsController.listForUI());
            }

        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    /**
     * 1150710@isep.ipp.pt selects a script from the list
     *
     * @param evt
     */
    private void jListScriptsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListScriptsMouseClicked
        // TODO add your handling code here:
        int index = 0;
        int indexes[] = this.jListScripts.getSelectedIndices();
        if (indexes.length > 0) {   //something is selected
            this.jTextAreaBeanShellEditor.setText(scriptsController.get(indexes[index]).getBeanShellScript());
            this.jTextBeanShellAreaDescription.setText(scriptsController.get(indexes[index]).getScriptDescription());
        }
    }//GEN-LAST:event_jListScriptsMouseClicked

    private void scriptSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scriptSaveButtonActionPerformed
        List<String> lines = new ArrayList<>();
        String[] textLines = editScriptArea.getText().split("\\n");

        for (int i = 0; i < textLines.length; i++) {
            lines.add(textLines[i]);
        }
        String name = savedMacroList.getSelectedValue();

        parametersController.removeMacro(savedMacroList.getSelectedValue());
        parametersController.saveMacro(name, parametersController.createMacro(lines, cell));
        updateSavedMacrosList();
        editScriptArea.setText("");
        savedMacroList.setEnabled(true);
    }//GEN-LAST:event_scriptSaveButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            String name = savedMacroList.getSelectedValue();
            this.parametersController.removeMacro(name);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Select a Macro from the list!");

        }
        updateSavedMacrosList();
        editScriptArea.setText("");
        combo.removeAllItems();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void jButtonResetListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetListActionPerformed
        // TODO add your handling code here:
        this.scriptsController.fillData();
        this.scriptsController.saveList();
        this.jListScripts.setModel(this.scriptsController.listForUI());
    }//GEN-LAST:event_jButtonResetListActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        List<String> lines = new ArrayList<>();
        String[] textLines = console.getText().split("\\n");

        for (int i = 0; i < textLines.length; i++) {
            lines.add(textLines[i]);
        }

        try {
            String name = JOptionPane.showInputDialog(this, "Introduza nome da macro.");
            parametersController.saveMacro(name, parametersController.createMacroParameters(lines, cell, this.listP));
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Não é possivel guradar um nome vazio!");
        }
        updateSavedMacrosList();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        String name = savedMacroList.getSelectedValue();
        savedMacroList.setEnabled(false);
        List<String> script = this.parametersController.getMacroScript(name);
        ArrayList<String> parameters = this.parametersController.getMacroParameters(name);
        for (String s : parameters) {
            combo.addItem(s);
        }
        String aux = "";
        for (String s : script) {
            aux += s + "\n";
        }
        editScriptArea.setText(aux);
        editScriptArea.removeAll();
    }//GEN-LAST:event_editButtonActionPerformed

    private void parameterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parameterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parameterActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        String p = parameter.getText();
        String v  = value.getText();
        if (!p.equals("") || !v.equals("")) {
            boolean checkValue = isDouble(v);
            if(checkValue == true){
            double val = Double.parseDouble(v);
            Parameter param = new Parameter(p,new Value(val));
            boolean check = confirmParameter(param);
            if (check == false) {
                this.listP.add(p + "            " + v);
                DefaultListModel model = parametersController.updateParameters(this.listP);
                list.addTemporaryVariable(cell, cell.getSpreadsheet(), "_"+p, new Value(val));
                parameterList.setModel(model);
                parameter.setText("");
                value.setText("");
            } else {
                JOptionPane.showMessageDialog(combo, "Parameter already exists!");
                parameter.setText("");
                value.setText("");
            }
            }else{
                JOptionPane.showMessageDialog(null,"Invalid Value!");
                parameter.setText("");
                value.setText("");
            } 

        } else {
            JOptionPane.showMessageDialog(this, "No parameter!!");
        }


    }//GEN-LAST:event_addbtnActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboActionPerformed

    private void updateSavedMacrosList() {
        savedMacroList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        savedMacroList.setModel(parametersController.listForUI());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnExecute;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JComboBox<String> comboFunctions;
    private javax.swing.JComboBox<String> comboOperators;
    private javax.swing.JTextArea console;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JTextArea editScriptArea;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonGenerateShellBeansScript;
    private javax.swing.JButton jButtonResetList;
    private javax.swing.JButton jButtonRunShellBean;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jListScripts;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelBeanShell;
    private javax.swing.JPanel jPanelMacro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaBeanShellEditor;
    private javax.swing.JTextArea jTextAreaHelp;
    private javax.swing.JTextArea jTextBeanShellAreaDescription;
    private javax.swing.JLabel lblfuntion;
    private javax.swing.JPanel northPanel;
    private javax.swing.JTextField parameter;
    private javax.swing.JList<String> parameterList;
    private javax.swing.JButton saveButton;
    private javax.swing.JList<String> savedMacroList;
    private javax.swing.JButton scriptSaveButton;
    private javax.swing.JPanel southPanel;
    private javax.swing.JTextField value;
    // End of variables declaration//GEN-END:variables

    private boolean confirmParameter(Parameter param) {
        for (Parameter p : this.parameters) {
            if (p.getName().equals(param.getName())) {
                return true;
            }

        }
        parameters.add(param);
        return false;
    }
    
    private boolean isDouble(String value){
        try{
            Double.parseDouble(value);
            return true;
        }catch(NumberFormatException e){
            return false;
        }
    }
}
